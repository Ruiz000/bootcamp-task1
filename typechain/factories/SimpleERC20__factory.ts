/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimpleERC20 } from "../SimpleERC20";

export class SimpleERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    initialSupply: BigNumberish,
    overrides?: Overrides
  ): Promise<SimpleERC20> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    ) as Promise<SimpleERC20>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    initialSupply: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): SimpleERC20 {
    return super.attach(address) as SimpleERC20;
  }
  connect(signer: Signer): SimpleERC20__factory {
    return super.connect(signer) as SimpleERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC20 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003553480156200001657600080fd5b5060405162000ab738038062000ab78339810160408190526200003991620002aa565b83516200004e90600190602087019062000137565b5082516200006490600090602086019062000137565b506002805460ff191660ff841617905560068054336001600160a01b03199091168117909155620000969082620000a1565b505050505062000399565b6001600160a01b038216600090815260046020526040812080548391908390620000cd90849062000335565b925050819055508160036000828254620000e8919062000335565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600192915050565b82805462000145906200035c565b90600052602060002090601f016020900481019282620001695760008555620001b4565b82601f106200018457805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b457825182559160200191906001019062000197565b50620001c2929150620001c6565b5090565b5b80821115620001c25760008155600101620001c7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020557600080fd5b81516001600160401b0380821115620002225762000222620001dd565b604051601f8301601f19908116603f011681019082821181831017156200024d576200024d620001dd565b816040528381526020925086838588010111156200026a57600080fd5b600091505b838210156200028e57858201830151818301840152908201906200026f565b83821115620002a05760008385830101525b9695505050505050565b60008060008060808587031215620002c157600080fd5b84516001600160401b0380821115620002d957600080fd5b620002e788838901620001f3565b95506020870151915080821115620002fe57600080fd5b506200030d87828801620001f3565b935050604085015160ff811681146200032557600080fd5b6060959095015193969295505050565b600082198211156200035757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200037157607f821691505b602082108114156200039357634e487b7160e01b600052602260045260246000fd5b50919050565b61070e80620003a96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461016e57806370a082311461018157806395d89b41146101a1578063a9059cbb146101a9578063dd62ed3e146101bc578063fca3b5aa146101e757600080fd5b806306fdde03146100b957806307546172146100d7578063095ea7b31461010257806318160ddd1461012557806323b872dd1461013c578063313ce5671461014f575b600080fd5b6100c16101fc565b6040516100ce9190610533565b60405180910390f35b6006546100ea906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6101156101103660046105a4565b61028a565b60405190151581526020016100ce565b61012e60035481565b6040519081526020016100ce565b61011561014a3660046105ce565b6102f6565b60025461015c9060ff1681565b60405160ff90911681526020016100ce565b61011561017c3660046105a4565b610370565b61012e61018f36600461060a565b60046020526000908152604090205481565b6100c161039e565b6101156101b73660046105a4565b6103ab565b61012e6101ca366004610625565b600560209081526000928352604080842090915290825290205481565b6101fa6101f536600461060a565b6103bf565b005b6001805461020990610658565b80601f016020809104026020016040519081016040528092919081815260200182805461023590610658565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e59086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600560209081526040808320338452909152812054600019811461035c576001600160a01b0385166000908152600560209081526040808320338452909152812080548592906103569084906106a9565b90915550505b6103678585856103f8565b95945050505050565b6006546000906001600160a01b0316331461038a57600080fd5b61039483836104ad565b5060019392505050565b6000805461020990610658565b60006103b83384846103f8565b9392505050565b6006546001600160a01b031633146103d657600080fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166000908152600460205260408120805483919083906104229084906106a9565b90915550506001600160a01b0383166000908152600460205260408120805484929061044f9084906106c0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161049b91815260200190565b60405180910390a35060019392505050565b6001600160a01b0382166000908152600460205260408120805483919083906104d79084906106c0565b9250508190555081600360008282546104f091906106c0565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102e5565b600060208083528351808285015260005b8181101561056057858101830151858201604001528201610544565b81811115610572576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461059f57600080fd5b919050565b600080604083850312156105b757600080fd5b6105c083610588565b946020939093013593505050565b6000806000606084860312156105e357600080fd5b6105ec84610588565b92506105fa60208501610588565b9150604084013590509250925092565b60006020828403121561061c57600080fd5b6103b882610588565b6000806040838503121561063857600080fd5b61064183610588565b915061064f60208401610588565b90509250929050565b600181811c9082168061066c57607f821691505b6020821081141561068d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106bb576106bb610693565b500390565b600082198211156106d3576106d3610693565b50019056fea264697066735822122098e8d13c521a20372f9ebd6cf016473c12debbd3c2a478e7e5eaa11b80b571e064736f6c634300080b0033";
