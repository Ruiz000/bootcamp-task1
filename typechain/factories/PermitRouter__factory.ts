/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PermitRouter } from "../PermitRouter";

export class PermitRouter__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: PermitRouterLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      PermitRouter__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: PermitRouterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0d400cf0f7b86820a01548c87cacef447b\\$__", "g"),
      linkLibraryAddresses["__$0d400cf0f7b86820a01548c87cacef447b$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _pair: string,
    _token0: string,
    _token1: string,
    _token2: string,
    _fee: BigNumberish,
    overrides?: Overrides
  ): Promise<PermitRouter> {
    return super.deploy(
      _pair,
      _token0,
      _token1,
      _token2,
      _fee,
      overrides || {}
    ) as Promise<PermitRouter>;
  }
  getDeployTransaction(
    _pair: string,
    _token0: string,
    _token1: string,
    _token2: string,
    _fee: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pair,
      _token0,
      _token1,
      _token2,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): PermitRouter {
    return super.attach(address) as PermitRouter;
  }
  connect(signer: Signer): PermitRouter__factory {
    return super.connect(signer) as PermitRouter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PermitRouter {
    return new Contract(address, _abi, signerOrProvider) as PermitRouter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "GaslessSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620018d9380380620018d98339810160408190526200003591620000e0565b620000403362000073565b6001600160601b0319606095861b811660805293851b841660a05291841b831660c05290921b1660e05260015562000147565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000db57600080fd5b919050565b600080600080600060a08688031215620000f957600080fd5b6200010486620000c3565b94506200011460208701620000c3565b93506200012460408701620000c3565b92506200013460608701620000c3565b9150608086015190509295509295909350565b60805160601c60a05160601c60c05160601c60e05160601c6116ce6200020b60003960008181610141015281816102f7015281816106b7015281816109ca01528181610aea01528181610e9401528181610f1c01526110050152600081816101e7015281816102a3015261066301526000818161010201528181610483015281816104f70152818161085301526108c70152600081816101c0015281816103700152818161051901528181610730015281816108e90152610df901526116ce6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063d21220a711610066578063d21220a7146101e2578063ddca3f4314610209578063e941fa7814610212578063f2fde38b1461021a57600080fd5b8063715018a6146101a25780638da5cb5b146101aa578063a8aa1b31146101bb57600080fd5b806304464220146100d45780630dfe1681146100fd57806325be124e1461013c57806354a459571461016357806360b71d4e1461017657806369fe0e2d1461018d575b600080fd5b6100e76100e2366004611214565b61022d565b6040516100f491906114c8565b60405180910390f35b6101247f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f4565b6101247f000000000000000000000000000000000000000000000000000000000000000081565b6100e7610171366004611214565b6105f2565b61017f60025481565b6040519081526020016100f4565b6101a061019b3660046113a6565b610926565b005b6101a0610955565b6000546001600160a01b0316610124565b6101247f000000000000000000000000000000000000000000000000000000000000000081565b6101247f000000000000000000000000000000000000000000000000000000000000000081565b61017f60015481565b6101a061098b565b6101a06102283660046111f2565b610b71565b606082428110156102805760405162461bcd60e51b8152602060048201526018602482015277155b9a5cddd85c158c949bdd5d195c8e881156141254915160421b60448201526064015b60405180910390fd5b6040805160028082526060820183526000926020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106102d5576102d561166c565b60200260200101906001600160a01b031690816001600160a01b0316815250507f0000000000000000000000000000000000000000000000000000000000000000816001815181106103295761032961166c565b6001600160a01b0390921660209283029190910190910152604051630c90945960e11b815273__$0d400cf0f7b86820a01548c87cacef447b$__9063192128b29061039c907f0000000000000000000000000000000000000000000000000000000000000000908b908690600401611465565b60006040518083038186803b1580156103b457600080fd5b505af41580156103c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f091908101906112d7565b925085836000815181106104065761040661166c565b6020026020010151111561046c5760405162461bcd60e51b815260206004820152602760248201527f556e69737761705632526f757465723a204558434553534956455f494e50555460448201526617d05353d5539560ca1b6064820152608401610277565b604051639fd5a6cf60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639fd5a6cf906104c0908b9030908b908b908b90600401611420565b600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b505050506105587f0000000000000000000000000000000000000000000000000000000000000000897f00000000000000000000000000000000000000000000000000000000000000008660008151811061054b5761054b61166c565b6020026020010151610c0c565b61056383828a610d3c565b61056c88610e70565b876001600160a01b03167f3c0992b39b2bf28fd0beb1a02e8e8e6d77db5c47f25f3e7acc4f031f29406787846000815181106105aa576105aa61166c565b6020026020010151856001815181106105c5576105c561166c565b602002602001015188886040516105df9493929190611578565b60405180910390a2505095945050505050565b606082428110156106405760405162461bcd60e51b8152602060048201526018602482015277155b9a5cddd85c158c949bdd5d195c8e881156141254915160421b6044820152606401610277565b6040805160028082526060820183526000926020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106106955761069561166c565b60200260200101906001600160a01b031690816001600160a01b0316815250507f0000000000000000000000000000000000000000000000000000000000000000816001815181106106e9576106e961166c565b6001600160a01b0390921660209283029190910190910152604051635dbdce3b60e11b815273__$0d400cf0f7b86820a01548c87cacef447b$__9063bb7b9c769061075c907f0000000000000000000000000000000000000000000000000000000000000000908b908690600401611465565b60006040518083038186803b15801561077457600080fd5b505af4158015610788573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107b091908101906112d7565b92508583600185516107c2919061160f565b815181106107d2576107d261166c565b6020026020010151101561083c5760405162461bcd60e51b815260206004820152602b60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f4f5560448201526a1514155517d05353d5539560aa1b6064820152608401610277565b604051639fd5a6cf60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639fd5a6cf90610890908b9030908c908b908b90600401611420565b600060405180830381600087803b1580156108aa57600080fd5b505af11580156108be573d6000803e3d6000fd5b5050505061091b7f0000000000000000000000000000000000000000000000000000000000000000897f00000000000000000000000000000000000000000000000000000000000000008660008151811061054b5761054b61166c565b610563838230610d3c565b6000546001600160a01b031633146109505760405162461bcd60e51b81526004016102779061150c565b600155565b6000546001600160a01b0316331461097f5760405162461bcd60e51b81526004016102779061150c565b610989600061108e565b565b6000546001600160a01b031633146109b55760405162461bcd60e51b81526004016102779061150c565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5691906113bf565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610a9c57600080fd5b505af1158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190611384565b506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610b3457600080fd5b505afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906113bf565b600255565b6000546001600160a01b03163314610b9b5760405162461bcd60e51b81526004016102779061150c565b6001600160a01b038116610c005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610277565b610c098161108e565b50565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610c709190611404565b6000604051808303816000865af19150503d8060008114610cad576040519150601f19603f3d011682016040523d82523d6000602084013e610cb2565b606091505b5091509150818015610cdc575080511580610cdc575080806020019051810190610cdc9190611384565b610d345760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608401610277565b505050505050565b60008083600081518110610d5257610d5261166c565b602002602001015184600181518110610d6d57610d6d61166c565b6020026020010151915091506000610d8583836110de565b509050600086600181518110610d9d57610d9d61166c565b60200260200101519050600080836001600160a01b0316866001600160a01b031614610dcb57826000610dcf565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f90610e3390859085908c9060248101611541565b600060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b50505050505050505050505050565b6002546040516370a0823160e01b8152306004820152600091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ed657600080fd5b505afa158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e91906113bf565b610f18919061160f565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83612710600154612710610f5d919061160f565b610f6790866115f0565b610f7191906115ce565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610fb757600080fd5b505af1158015610fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fef9190611384565b506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561104f57600080fd5b505afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108791906113bf565b6002555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b0316846001600160a01b031614156111515760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b6064820152608401610277565b826001600160a01b0316846001600160a01b031610611171578284611174565b83835b90925090506001600160a01b0382166111cf5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f4144445245535300006044820152606401610277565b9250929050565b80356001600160a01b03811681146111ed57600080fd5b919050565b60006020828403121561120457600080fd5b61120d826111d6565b9392505050565b600080600080600060a0868803121561122c57600080fd5b611235866111d6565b945060208087013594506040870135935060608701359250608087013567ffffffffffffffff8082111561126857600080fd5b818901915089601f83011261127c57600080fd5b81358181111561128e5761128e611682565b6112a0601f8201601f1916850161159d565b91508082528a848285010111156112b657600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600060208083850312156112ea57600080fd5b825167ffffffffffffffff8082111561130257600080fd5b818501915085601f83011261131657600080fd5b81518181111561132857611328611682565b8060051b915061133984830161159d565b8181528481019084860184860187018a101561135457600080fd5b600095505b83861015611377578051835260019590950194918601918601611359565b5098975050505050505050565b60006020828403121561139657600080fd5b8151801515811461120d57600080fd5b6000602082840312156113b857600080fd5b5035919050565b6000602082840312156113d157600080fd5b5051919050565b600081518084526113f0816020860160208601611626565b601f01601f19169290920160200192915050565b60008251611416818460208701611626565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061145a908301846113d8565b979650505050505050565b6001600160a01b038481168252602080830185905260606040840181905284519084018190526000928583019290916080860190855b818110156114b957855185168352948301949183019160010161149b565b50909998505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611500578351835292840192918401916001016114e4565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b84815283602082015260018060a01b038316604082015260806060820152600061156e60808301846113d8565b9695505050505050565b84815283602082015282604082015260806060820152600061156e60808301846113d8565b604051601f8201601f1916810167ffffffffffffffff811182821017156115c6576115c6611682565b604052919050565b6000826115eb57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561160a5761160a611656565b500290565b60008282101561162157611621611656565b500390565b60005b83811015611641578181015183820152602001611629565b83811115611650576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c8650725af7e68ccde26331e11dfe88c44d5c88b6135533ff55466ae99c8da1864736f6c63430008070033";

export interface PermitRouterLibraryAddresses {
  ["__$0d400cf0f7b86820a01548c87cacef447b$__"]: string;
}
