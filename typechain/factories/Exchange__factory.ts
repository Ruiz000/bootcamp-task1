/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Exchange } from "../Exchange";

export class Exchange__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _tokenIn: string,
    _tokenOut: string,
    _exchangeRate: BigNumberish,
    overrides?: Overrides
  ): Promise<Exchange> {
    return super.deploy(
      _tokenIn,
      _tokenOut,
      _exchangeRate,
      overrides || {}
    ) as Promise<Exchange>;
  }
  getDeployTransaction(
    _tokenIn: string,
    _tokenOut: string,
    _exchangeRate: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenIn,
      _tokenOut,
      _exchangeRate,
      overrides || {}
    );
  }
  attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_exchangeRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exchangeRate",
        type: "uint256",
      },
    ],
    name: "adminSetExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "adminWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "change",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIn",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenInReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenOut",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261271060045534801561001657600080fd5b506040516108fc3803806108fc833981016040819052610035916100e2565b61003e33610076565b600180546001600160a01b039485166001600160a01b031991821617909155600280549390941692169190911790915560035561011e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd57600080fd5b919050565b6000806000606084860312156100f757600080fd5b610100846100c6565b925061010e602085016100c6565b9150604084015190509250925092565b6107cf8061012d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806375322e471161007157806375322e471461011b5780637c5b4a371461012e578063865192f7146101415780638da5cb5b1461014a578063d0202d3b1461015b578063f2fde38b1461016e57600080fd5b80630b91dda7146100ae57806320876c50146100ca5780633ba0b9a9146100df5780636daf390b146100e8578063715018a614610113575b600080fd5b6100b760055481565b6040519081526020015b60405180910390f35b6100dd6100d836600461069a565b610181565b005b6100b760035481565b6001546100fb906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6100dd6101da565b6100dd61012936600461069a565b6101ee565b6100dd61013c36600461069a565b6104f6565b6100b760045481565b6000546001600160a01b03166100fb565b6002546100fb906001600160a01b031681565b6100dd61017c3660046106b3565b610577565b6101896105f0565b600081116101d55760405162461bcd60e51b815260206004820152601460248201527365786368616e676552617465206973207a65726f60601b60448201526064015b60405180910390fd5b600355565b6101e26105f0565b6101ec600061064a565b565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b91906106e3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906106fc565b506001546040516370a0823160e01b8152306004820152839183916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610324573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034891906106e3565b6103529190610734565b10156103905760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064016101cc565b81600560008282546103a2919061074d565b9091555050600454600354600091906103bb9085610760565b6103c59190610777565b6002546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906106e3565b101561047b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016101cc565b60025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906106fc565b50505050565b6104fe6105f0565b60025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561054f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057391906106fc565b5050565b61057f6105f0565b6001600160a01b0381166105e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101cc565b6105ed8161064a565b50565b6000546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106ac57600080fd5b5035919050565b6000602082840312156106c557600080fd5b81356001600160a01b03811681146106dc57600080fd5b9392505050565b6000602082840312156106f557600080fd5b5051919050565b60006020828403121561070e57600080fd5b815180151581146106dc57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156107475761074761071e565b92915050565b808201808211156107475761074761071e565b80820281158282048414176107475761074761071e565b60008261079457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208e92dffb039386460be4820ccd278fa4cf65b8e43b4a7771e35e158403210bb864736f6c63430008130033";
